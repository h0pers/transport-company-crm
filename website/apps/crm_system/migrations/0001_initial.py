# Generated by Django 4.2.23 on 2025-08-01 14:27

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Canton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Canton',
                'verbose_name_plural': 'Canton',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('in_liquidation', models.BooleanField(blank=True, default=False, verbose_name='Liquidation')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyContactRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('decline', 'Decline'), ('agreed', 'Agreed'), ('repeat', 'Repeat')], max_length=20)),
                ('contacted_at', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Company contact record',
                'verbose_name_plural': 'Company contact records',
                'ordering': ['contacted_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField(verbose_name='Note')),
            ],
            options={
                'verbose_name': 'Company note',
                'verbose_name_plural': 'Company notes',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Company type',
                'verbose_name_plural': 'Company types',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegalForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Legal form',
                'verbose_name_plural': 'Legal forms',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegalSeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Legal seat',
                'verbose_name_plural': 'Legal seats',
                'ordering': ['name'],
                'abstract': False,
                'indexes': [models.Index(fields=['name'], name='crm_system__name_29dd63_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='legalseat',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_name_legalseat', violation_error_message='Record with this name already exists'),
        ),
        migrations.AddIndex(
            model_name='legalform',
            index=models.Index(fields=['name'], name='crm_system__name_079483_idx'),
        ),
        migrations.AddConstraint(
            model_name='legalform',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_name_legalform', violation_error_message='Record with this name already exists'),
        ),
        migrations.AddIndex(
            model_name='companytype',
            index=models.Index(fields=['name'], name='crm_system__name_099ad3_idx'),
        ),
        migrations.AddConstraint(
            model_name='companytype',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_name_companytype', violation_error_message='Record with this name already exists'),
        ),
        migrations.AddField(
            model_name='companynote',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='crm_system.company'),
        ),
    ]
